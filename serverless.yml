service: s3-bucket-api

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-south-1
  apiName: ${self:service}
  memorySize: 256 # in MB
  timeout: 30 # in seconds
  environment:
    FILE_UPLOAD_BUCKET_NAME: ${self:custom.bucketName}

plugins:
  - serverless-iam-roles-per-function

custom:
  bucketName: s3-bucket-api-${self:provider.stage}

functions:
  s3FileUploader:
    handler: dist/handlers/uploadFile.handler
    name: s3-file-uploader
    events:
      - http:
          path: upload
          method: POST
    iamRoleStatements:
      - Effect: Allow
        Action: s3:PutObject
        Resource: arn:aws:s3:::${self:custom.bucketName}/*
  s3FileDownloader:
    handler: dist/handlers/downloadFile.handler
    name: s3-file-downloader
    events:
      - http:
          path: files/{id}
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action: s3:GetObject
        Resource: arn:aws:s3:::${self:custom.bucketName}/*
  s3fileDelete:
    handler: dist/handlers/deleteFile.handler
    name: s3-file-delete
    events:
      - http:
          path: delete/{id}
          method: DELETE
    iamRoleStatements:
      - Effect: Allow
        Action: s3:DeleteObject
        Resource: arn:aws:s3:::${self:custom.bucketName}/*

resources:
  Resources:
    FileBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: Private
